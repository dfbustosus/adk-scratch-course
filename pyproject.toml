[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "adk-course"
description = "A comprehensive course on Google Development Kit (GDK) for building intelligent agents"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "ADK Course Contributors", email = "contributors@adk-course.dev"},
]
maintainers = [
    {name = "Daniel Bustos", email = "dfbustosus@example.com"},
]
keywords = [
    "google-development-kit",
    "gdk",
    "agents",
    "artificial-intelligence",
    "machine-learning",
    "tutorial",
    "course",
    "python",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"
dependencies = [
    "google-cloud-aiplatform>=1.38.0",
    "google-auth>=2.23.0",
    "google-auth-oauthlib>=1.1.0",
    "google-auth-httplib2>=0.1.1",
    "requests>=2.31.0",
    "pydantic>=2.4.0",
    "click>=8.1.7",
    "rich>=13.6.0",
    "typer>=0.9.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.2",
    "structlog>=23.2.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/dfbustosus/adk-scratch-course"
Documentation = "https://dfbustosus.github.io/adk-scratch-course"
Repository = "https://github.com/dfbustosus/adk-scratch-course.git"
Issues = "https://github.com/dfbustosus/adk-scratch-course/issues"
Changelog = "https://github.com/dfbustosus/adk-scratch-course/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "coverage[toml]>=7.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.7.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "ruff>=0.0.287",
    "bandit>=1.7.5",
    "safety>=2.3.0",
    "tox>=4.6.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "coverage[toml]>=7.3.0",
    "httpx",
    "responses>=0.23.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
    "sphinxcontrib-mermaid>=0.9.2",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.5.0",
]
examples = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "plotly>=5.15.0",
]
all = [
    "adk-course[dev,test,docs,examples]"
]

[project.scripts]
adk-course = "adk_course.cli:main"
adk-validate = "adk_course.validation:main"
adk-setup = "adk_course.setup:main"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/adk_course/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["src/adk_course"]

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/docs",
    "/tests",
    "/scripts",
    ".gitignore",
    ".pre-commit-config.yaml",
    "tox.ini",
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "google.*",
    "google_auth_oauthlib.*",
    "google_auth_httplib2.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/adk_course",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/adk_course"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/conftest.py",
    "src/adk_course/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Ruff configuration
[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]  # Allow assert statements in tests

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]